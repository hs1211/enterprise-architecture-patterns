Enterprise Architecture
-----------------------
  |  해당 자료는 마틴 파울러의 책을 정리한 것이며 큰 그림으로 부터 상세한 내용을 정리하기 위하여 만들었다. 
  |  아키텍처는 성능적인면과 확장성적인 면을 고려하여 시스템에서 상위에서 디자인하고 구현하는 것이다. 
  |  이 책에서는 아키텍처는 반쪽만 구워진 빵이라고 하듯 아키텍처는 적용되고 약간의 수정과 조정을 거친후 오전하게 만들어진다. 
  |  빵을 만들러 오늘도 즐거운 한발짝을 걸어보자.


Layered Architecture
--------------------
  |  이 책에서는 다양한 패턴보다는 기업에서 많이 쓰이는 'Layered Architecture'를 기본으로 디자인하는 것을 가정하고 있다.
  |  그래서 이책에서 만들하는 Layered Architecture의 큰 그림을 먼저 살펴보도록 하자.


Layering
--------
  | 'Layering'은 복잡한 시스템을 분리할때 사용하는 일반적인 패턴으로 유용하다.
  | 레이어 형태의 디자인을 생각할때 다음과 같은 특징이 있을 것이다

  1) 상위 레이버는 하위 레이어를 의존한다.
  2) 하위 레이버는 상위 레이어에 대하여 모른다.
  3) 단점으로 상위레이어이 변화가 하위레이어들에 영향을 줄 수 있음(Cascading changes)


* 해당 책에서는 레이어를 3개로 분리해서 설명한다. 세 개의 레이어의 일반적인 내용을 먼저 확인해 보자.

  |  --------------------
  | |    Presentation    |
  |  --------------------
  | |   Domain Logic     |
  |  --------------------
  | |    Data Source     |
  |  --------------------

  .. code-block:: text

    Presentation: User and S/W와 어떻게 상호작용할지르 책임지는 레이어
    Dmomain Logic: 비지니스 로직이라고도 불리며 도메인에서 실제 다루어야 하는 로직을 뜻하며 저장된 데이터와 주어진 데이터를 기반으로 계산 및 검증을 담당
    Data Source: 다른 시스템과 통신을 담당하는 역할, 기업아키텍처에서는 저장해야 하는 데이터를 대부분으로 이루어짐

Reference
---------


Copyright & License
--------------------